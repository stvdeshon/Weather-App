{"version":3,"file":"main.js","mappings":"MAYA,MAAMA,EAASC,SAASC,cAAc,SAoBtC,SAASC,GAA0B,KACjCC,EACAC,MAAM,KAAEC,EAAI,WAAEC,EAAU,SAAEC,GAC1BC,UAAU,KAAEJ,IACZK,MAAM,MAAEC,KAERV,SAASC,cAAc,qBAAqBU,YAAc,GAAGR,IAC7DH,SAASC,cAAc,cAAcU,YAAc,GAAGP,IACtDJ,SAASC,cAAc,SAASU,YAAc,gBAAgBN,IAC9DL,SAASC,cACP,eACAU,YAAc,eAAeL,IAC/BN,SAASC,cAAc,aAAaU,YAAc,aAAaJ,IAC/DP,SAASC,cAAc,SAASU,YAAc,SAASD,OACzD,CAEAE,eAAeC,GAAkBC,OAAO,IAAEC,EAAG,IAAEC,KAC7C,MAAMC,QAAiBC,MACrB,wDAAwDH,SAAWC,0DACnE,CAAEG,KAAM,SAEJC,QAAaH,EAASI,OAC5B,IAAIC,EAAe,GACnB,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAKI,KAAKC,OAAQF,IAC3B,GAALA,GAAe,IAALA,GAAgB,IAALA,GAAgB,IAALA,GAAgB,IAALA,GAC7CD,EAAaI,KAAKN,EAAKI,KAAKD,IAMlC,IAAyBI,IAHPL,EAIhBtB,SAASC,cAAc,aAAa2B,UAAY,GAChDD,EAAME,SAASC,IACb9B,SAASC,cAAc,aAAa2B,WAAa,6BAWrD,SAAiBG,GACf,MAAMC,EAAgBD,EAAIE,MAAM,KAAK,GACrC,IAAIC,EAAI,IAAIC,KAAK,GAAGH,KAAiBI,eAAeH,MAAM,KAC1D,OAAQI,KAAOH,EAAE,GAAK,KAAOA,EAAE,GAAK,IAAMA,EAAE,EAC9C,CAdqBI,CAAQR,EAAMS,yCACRT,EAAMtB,QAAQ,GAAGJ,iCACtB0B,EAAM1B,KAAKC,uCACLyB,EAAM1B,KAAKE,2CACbwB,EAAM1B,KAAKG,qCACfuB,EAAMrB,KAAKC,qBACxB,GAZT,CAhDAX,EAAOyC,iBAAiB,YAAY5B,MAAO6B,IACzC,GAAc,UAAVA,EAAEC,IAAiB,CACrB,IACE,MAAMzB,QAAiBC,MACrB,qDAAqDuB,EAAEE,OAAOC,8DAC9D,CAAEzB,KAAM,SAEJ0B,QAAiB5B,EAASI,OAChCyB,QAAQC,IAAIF,GACZ3C,EAA0B2C,GAC1BhC,EAAgBgC,EAGlB,CAFE,MAAOG,GACP,OAAO,IACT,CACAjD,EAAO6C,MAAQ,EACjB,KAuDFK,OAAOT,iBAAiB,oBAnFxB5B,iBACE,MACMK,QAAiBC,MACrB,mHACA,CAAEC,KAAM,SAEJ+B,QAAoBjC,EAASI,OACnCnB,EAA0BgD,GAC1BrC,EAAgBqC,GAChBJ,QAAQC,IAAIG,EACd,G","sources":["webpack://weather-app/./src/index.js"],"sourcesContent":["async function defaultCurrentWeather() {\n  const defaultCity = \"New York\";\n  const response = await fetch(\n    `https://api.openweathermap.org/data/2.5/weather?q=${defaultCity}&units=imperial&APPID=d53b7a1b0831587e43e406c3f5532905`,\n    { mode: \"cors\" }\n  );\n  const weatherData = await response.json();\n  destructureCurrentWeather(weatherData);\n  fiveDayForecast(weatherData);\n  console.log(weatherData);\n}\n\nconst search = document.querySelector(\"input\");\nsearch.addEventListener(\"keypress\", async (e) => {\n  if (e.key === \"Enter\") {\n    try {\n      const response = await fetch(\n        `https://api.openweathermap.org/data/2.5/weather?q=${e.target.value}&units=imperial&APPID=d53b7a1b0831587e43e406c3f5532905`,\n        { mode: \"cors\" }\n      );\n      const location = await response.json();\n      console.log(location);\n      destructureCurrentWeather(location);\n      fiveDayForecast(location);\n    } catch (err) {\n      return null;\n    }\n    search.value = \"\";\n  }\n});\n\n//extracts the data I want from the API object\nfunction destructureCurrentWeather({\n  name,\n  main: { temp, feels_like, humidity },\n  weather: [{ main }],\n  wind: { speed },\n}) {\n  document.querySelector(\"#current-location\").textContent = `${name}`;\n  document.querySelector(\"#condition\").textContent = `${main}`;\n  document.querySelector(\"#temp\").textContent = `Temperature: ${temp}`;\n  document.querySelector(\n    \"#feels-like\"\n  ).textContent = `Feels like: ${feels_like}`;\n  document.querySelector(\"#humidity\").textContent = `Humidity: ${humidity}`;\n  document.querySelector(\"#wind\").textContent = `Wind: ${speed} MPH`;\n}\n\nasync function fiveDayForecast({ coord: { lat, lon } }) {\n  const response = await fetch(\n    `https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&units=imperial&appid=d53b7a1b0831587e43e406c3f5532905`,\n    { mode: \"cors\" }\n  );\n  const data = await response.json();\n  let fiveDayArray = [];\n  for (let i = 0; i < data.list.length; i++) {\n    if (i == 4 || i == 12 || i == 20 || i == 28 || i == 36) {\n      fiveDayArray.push(data.list[i]);\n    }\n  }\n  displayForecast(fiveDayArray);\n}\n\nfunction displayForecast(array) {\n  document.querySelector(\"#forecast\").innerHTML = \"\";\n  array.forEach((entry) => {\n    document.querySelector(\"#forecast\").innerHTML += `<div>\n    <p class=\"day\">${dateSet(entry.dt_txt)}</p>\n    <p class=\"condition\">${entry.weather[0].main}</p>\n    <p class=\"temp\">${entry.main.temp}</p>\n    <p class=\"feels-like\">${entry.main.feels_like}</p>\n    <p class=\"humidity\">${entry.main.humidity}</p>\n    <p class=\"wind\">${entry.wind.speed}</p>\n  </div>`;\n  });\n}\n\nfunction dateSet(val) {\n  const formattedDate = val.split(\" \")[0];\n  let d = new Date(`${formattedDate}`).toDateString().split(\" \");\n  return (date = d[0] + \", \" + d[1] + \" \" + d[2]);\n}\n\nwindow.addEventListener(\"DOMContentLoaded\", defaultCurrentWeather);\n"],"names":["search","document","querySelector","destructureCurrentWeather","name","main","temp","feels_like","humidity","weather","wind","speed","textContent","async","fiveDayForecast","coord","lat","lon","response","fetch","mode","data","json","fiveDayArray","i","list","length","push","array","innerHTML","forEach","entry","val","formattedDate","split","d","Date","toDateString","date","dateSet","dt_txt","addEventListener","e","key","target","value","location","console","log","err","window","weatherData"],"sourceRoot":""}